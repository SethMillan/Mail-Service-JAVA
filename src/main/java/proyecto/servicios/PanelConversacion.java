/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto.servicios;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.reflect.TypeToken;
import java.awt.Color;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import proyecto.objetos.Conversacion;
import proyecto.objetos.Mensaje;
import static proyecto.servicios.Mail.escribirJSON;
import static proyecto.servicios.Mail.leerJSON;

/**
 *
 * @author milla
 */
public class PanelConversacion extends javax.swing.JPanel {
    private Conversacion conversacion;
    private String lector;
    private static String nombreArchivo;
    private static int index;
    /**
     * Creates new form PanelConversacion
     */
    public PanelConversacion() {
        initComponents();
    }
    public PanelConversacion(Conversacion conversacion, String lector, int index){
        nombreArchivo = "D:/Aprendizaje/TAP/TAP-ProyectoCorreos/database.json" ;
        this.conversacion=conversacion;
        this.lector = lector;
        this.index = index;
        initComponents();
        this.index=0;
        for(Conversacion conversaciones: leerJSON()){
            if(conversaciones.equals(conversacion))
                break;
            index++;
        }
        Mensaje mensaje = conversacion.getMensajes().get(0);
        if(conversacion.getMensajes().get(conversacion.getMensajes().size()-1).getCorreoEmisor().equals(lector)){
            setBackground(new Color(204,204,204));
        }else if(conversacion.getMensajes().get(conversacion.getMensajes().size()-1).isLeido()){
            setBackground(new Color(204,204,204));
        }
        jLabel2.setText(mensaje.getCorreoEmisor());
        jLabel1.setText(mensaje.getAsunto());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 102, 102));
        setMaximumSize(new java.awt.Dimension(605, 56));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Asunto importante");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 202, -1));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("correo");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 543, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
       index=0;
        for(Conversacion conversaciones: leerJSON()){
            if(conversaciones.equals(conversacion))
                break;
            index++;
        }
        System.out.println("Index "+index);
        System.out.println("INDEX REAL -> "+conversacion);
        setBackground(new Color(204,204,204));
       List<Conversacion> conversaciones  = new ArrayList<>();
       conversaciones.addAll(leerJSON());
       List<Mensaje> msjs = conversaciones.get(index).getMensajes();
       if(conversacion.getMensajes().get(conversacion.getMensajes().size()-1).getCorreoReceptor().equals(lector)){
           msjs.get(msjs.size()-1).setLeido(true);
           conversacion.setMensajes(msjs);
           conversaciones.set(index, conversacion);
           System.out.println(conversaciones.get(index));
           System.out.println("Conversaciones: "+conversaciones);
           escribirJSON(conversaciones);
       }
       //AQUI TIENES QUE ACTUALIZAR EL JSON JEJE 
       new Mensajes(conversacion.getMensajes(), conversaciones,Mail.correoLog).setVisible(true);
       Mail.instancia.dispose();
       
    }//GEN-LAST:event_formMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
